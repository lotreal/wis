// Generated by CoffeeScript 1.7.1
'use strict';
var Game, GameMaster, Player, Room, main;

Player = (function() {
  function Player(id) {
    this.id = id;
  }

  return Player;

})();

GameMaster = (function() {
  function GameMaster(id) {
    this.id = id;
  }

  return GameMaster;

})();

Room = (function() {
  function Room(id) {
    this.id = id;
    this.players = [];
  }

  Room.prototype.add = function(player) {
    this.players.push(player);
    return player;
  };

  return Room;

})();

Game = (function() {
  var cache, debug, exports, join, player, players, room, rooms;
  rooms = {};
  players = {};
  cache = {};
  room = function(id) {
    if (!(id in rooms) || (rooms[id] == null)) {
      rooms[id] = new Room(id);
    }
    return rooms[id];
  };
  player = function(id) {
    if (!(id in players) || (players[id] == null)) {
      players[id] = new Player(id);
    }
    return players[id];
  };
  debug = function() {
    return console.log({
      rooms: rooms,
      players: players,
      cache: cache
    });
  };
  join = function(player, room) {
    if (!(player.id in cache)) {
      cache[player.id] = room.id;
      return room.add(player);
    } else {
      return false;
    }
  };
  exports = {
    debug: debug,
    room: room,
    player: player,
    join: join
  };
  return exports;
})();

main = function() {
  var r1, u1;
  r1 = Game.room('r1');
  u1 = Game.player('lot');
  Game.join(u1, r1);
  Game.join(u1, r1);
  Game.join(Game.player('nine'), r1);
  console.log(Game.room('r1'));
  console.log(Game.player('lot'));
  return Game.debug();
};

if (!module.parent) {
  main();
}

exports.Game = Game;
